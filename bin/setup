#!/usr/bin/env bash

# Sets up system for installing base pkg

set -euo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

print_label() {
    local CYAN="\033[1;96m"
    local NC="\033[0m"
    echo -e "${CYAN}$@${NC}"
}

REPO_URL="https://github.com/kovalromank/arch.git"

print_label "Synchronizing pacman database..."
pacman -Sy

[ ! -d "/sys/firmware/efi/efivars" ] && echo "System not booted in UEFI mode" && exit 1

DIR=$(pwd)

[ ! -d "$DIR/pkg/base" ] && echo "Run the script from repository root" && exit 1

read -p "Admin username: " user
[[ -z "$user" ]] && echo "Username cannot be empty" && exit 1

read -sp "Admin password: " password
echo
[[ -z "$password" ]] && echo "Password cannot be empty" && exit 1

read -sp "Repeat password: " password2
echo
[[ ! "$password" == "$password2" ]] && echo "Passwords didn't match" && exit 1

devicelist=$(lsblk -plnx name -o name,size | grep -Ev "boot|rpmb|loop")
echo "Devices: "
echo "$devicelist" | less -XF

read -p "Boot partition: " device_boot
[[ -z "$device_boot" ]] || [ ! -b $device_boot ] && echo "Not a block device" && exit 1

echo "Devices: "
echo "$devicelist" | less -XF

read -p "Root partition: " device_root
[[ -z "$device_root" ]] || [ ! -b $device_root ] && echo "Not a block device" && exit 1

[[ "$device_boot" == "$device_root" ]] && echo "Boot parition cannot be the same as the root partition" && exit 1

read -p "Hostname: " hostname
[[ -z "$hostname" ]] && echo "Hostname cannot be empty" && exit 1

part_boot=$device_boot
part_root=$device_root

print_label "Updating system clock..."
timedatectl set-ntp true

print_label "Formatting the root partition..."
mkfs.ext4 "$part_root"

print_label "Mounting the boot and root partitions..."
mount "$device_root" /mnt
mkdir -p /mnt/boot/efi
mount "$device_boot" /mnt/boot/efi

print_label "Installing essential packages..."
pacstrap /mnt base base-devel linux linux-firmware networkmanager

print_label "Generating an fstab file..."
genfstab -U /mnt >> /mnt/etc/fstab

print_label "Setting time zone..."
ln -sf /usr/share/zoneinfo/America/Toronto /mnt/etc/localtime

print_label "Generating locales..."
echo "LANG=en_US.UTF-8" > /mnt/etc/locale.conf
sed 's/#en_US/en_US/' -i /mnt/etc/locale.gen
arch-chroot /mnt locale-gen

print_label "Generating /etc/adjtime..."
arch-chroot /mnt hwclock --systohc

print_label "Creating hostname file..."
echo "$hostname" > /mnt/etc/hostname

print_label "Creating hosts file..."
cat >> /mnt/etc/hosts <<EOF
127.0.0.1   localhost
::1         localhost
127.0.1.1   $hostname.localdomain   $hostname
EOF

print_label "Creating admin user..."
arch-chroot /mnt useradd -mU -G wheel "$user"

print_label "Adding user and root passwords..."
echo "$user:$password" | chpasswd --root /mnt
echo "root:$password" | chpasswd --root /mnt

print_label "Adding admin to sudoers..."
mkdir -p /mnt/etc/sudoers.d
cat >> /mnt/etc/sudoers.d/kovalromank-base <<EOF
%wheel ALL=(ALL) ALL
Defaults passwd_timeout=0
EOF

print_label "Coping system repo over..."
repo_dest="/home/$user/arch"
mkdir -p "/mnt$repo_dest"
cp -r . "/mnt$repo_dest"
arch-chroot /mnt chown -R "$user:" $repo_dest 
arch-chroot /mnt chmod -R u+w $repo_dest

print_label "Done! Reboot and run postsetup"

